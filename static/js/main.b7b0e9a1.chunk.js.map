{"version":3,"sources":["redux.js","components/TodoInput.jsx","components/TodoList.jsx","App.js","index.js"],"names":["initialState","todos","id","uuidv4","name","complete","store","createStore","state","type","payload","map","todo","filter","window","devToolsExtension","TodoInput","useState","setTodo","dispatch","useDispatch","onSubmit","event","preventDefault","trim","addTodoAction","addTodo","className","placeholder","value","onChange","target","TodoList","useSelector","toggleTodo","todoId","toggleTodoAction","deleteTodo","deleteTodoAction","key","checked","bind","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSAGMA,EAAe,CACnBC,MAAO,CACL,CACEC,GAAIC,cACJC,KAAM,gBACNC,UAAU,GAEZ,CACEH,GAAIC,cACJC,KAAM,iBACNC,UAAU,KAKHC,EAAQC,aAOrB,WAA2D,IAA1CC,EAAyC,uDAAjCR,EAAiC,yCAAjBS,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,QAC7C,OAAQD,GACN,IAAK,WACH,OAAO,2BACFD,GADL,IAEEP,MAAM,GAAD,mBAAMO,EAAMP,OAAZ,CAAmBS,MAG5B,IAAK,cACH,OAAO,2BACFF,GADL,IAGEP,MAAOO,EAAMP,MAAMU,KAAI,SAACC,GAAD,OACrBA,EAAKV,KAAOQ,EAAZ,2BAA2BE,GAA3B,IAAiCP,UAAWO,EAAKP,WAAaO,OAGpE,IAAK,cACH,OAAO,2BACFJ,GADL,IAIEP,MAAOO,EAAMP,MAAMY,QAAO,SAACD,GAAD,OAAUA,EAAKV,KAAOQ,OAGpD,QACE,OAAOF,KA9BXR,EACAc,OAAOC,mBAAqBD,OAAOC,qBAkC9B,I,QCfQC,EAnCG,WAAO,IAAD,EACEC,mBAAS,IADX,mBACfL,EADe,KACTM,EADS,KAEhBC,EAAWC,cAiBjB,OACE,0BAAMC,SAZS,SAACC,GAChBA,EAAMC,iBACc,KAAhBX,EAAKY,UAPK,SAACZ,GAASO,ED+CC,SAACP,GAAD,MAAW,CACtCH,KAAM,WACNC,QAASE,GCjD0Ba,CAAcb,IAQ/Cc,CAAQ,CACNxB,GAAIC,cACJC,KAAMQ,EACNP,UAAU,IAEZa,EAAQ,OAKN,yBAAKS,UAAU,YACb,2BACElB,KAAK,OACLL,KAAK,OACLwB,YAAY,aACZC,MAAOjB,EACPkB,SAtBS,SAACR,GAChBJ,EAAQI,EAAMS,OAAOF,UAuBjB,4BAAQpB,KAAK,UAAb,UCCOuB,EA/BE,WACf,IAAM/B,EAAQgC,aAAY,SAACzB,GAAD,OAAWA,EAAMP,SAErCkB,EAAWC,cAGXc,EAAa,SAACC,GAAD,OAAYhB,EFkDD,SAACgB,GAAD,MAAa,CAC3C1B,KAAM,cACNC,QAASyB,GEpD+BC,CAAiBD,KACnDE,EAAa,SAACF,GAAD,OAAYhB,EFsDD,SAACgB,GAAD,MAAa,CAC3C1B,KAAM,cACNC,QAASyB,GExD+BG,CAAiBH,KAEzD,OACE,wBAAIR,UAAU,aACX1B,EAAMU,KAAI,SAACC,GAAD,OACT,wBAAI2B,IAAK3B,EAAKV,IACZ,2BACEO,KAAK,WACL+B,QAAS5B,EAAKP,SACdyB,SAAUI,EAAWO,KAAK,KAAM7B,EAAKV,MAEvC,0BAAMyB,UAAWf,EAAKP,SAAW,WAAa,MAAOO,EAAKR,MAC1D,0BACEuB,UAAU,gBACVe,QAASL,EAAWI,KAAK,KAAM7B,EAAKV,KAFtC,WCDKyC,MAbf,WACE,OACE,yBAAKhB,UAAU,OACb,kBAAC,IAAD,CAAUrB,MAAOA,GACf,yBAAKqB,UAAU,QACb,kBAAC,EAAD,MACA,kBAAC,EAAD,UCXViB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b7b0e9a1.chunk.js","sourcesContent":["import { createStore } from \"redux\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst initialState = {\n  todos: [\n    {\n      id: uuidv4(),\n      name: \"Go to the gym\",\n      complete: false,\n    },\n    {\n      id: uuidv4(),\n      name: \"Do the laundry\",\n      complete: false,\n    },\n  ],\n};\n\nexport const store = createStore(\n  reducer,\n  initialState,\n  window.devToolsExtension && window.devToolsExtension()\n);\n\n// we can destructure the type and payload if you dont want to write action.payload and action.type\nfunction reducer(state = initialState, { type, payload }) {\n  switch (type) {\n    case \"ADD_TODO\":\n      return {\n        ...state,\n        todos: [...state.todos, payload],\n      };\n    // if its complete it will make it incomplete - toggle\n    case \"TOGGLE_TODO\":\n      return {\n        ...state,\n        // find todo which has the same id that was passed in the payload and change that todo\n        todos: state.todos.map((todo) =>\n          todo.id === payload ? { ...todo, complete: !todo.complete } : todo\n        ),\n      };\n    case \"DELETE_TODO\":\n      return {\n        ...state,\n        //removes elements that meet the condition - if it does equal it gets removed\n        // if it is equal to payload.id that item will be removed\n        todos: state.todos.filter((todo) => todo.id !== payload),\n      };\n\n    default:\n      return state;\n  }\n}\n\n// when this type is received in the reducer it adds the payload in to the array for each case\nexport const addTodoAction = (todo) => ({\n  type: \"ADD_TODO\",\n  payload: todo,\n});\n\nexport const toggleTodoAction = (todoId) => ({\n  type: \"TOGGLE_TODO\",\n  payload: todoId,\n});\n\nexport const deleteTodoAction = (todoId) => ({\n  type: \"DELETE_TODO\",\n  payload: todoId,\n});\n","import React, { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { addTodoAction } from \"../redux\";\nimport { useDispatch } from \"react-redux\";\n\nconst TodoInput = () => {\n  const [todo, setTodo] = useState(\"\");\n  const dispatch = useDispatch();\n  const addTodo = (todo) => dispatch(addTodoAction(todo));\n\n  const onChange = (event) => {\n    setTodo(event.target.value);\n  };\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (todo.trim() === \"\") return;\n    addTodo({\n      id: uuidv4(),\n      name: todo,\n      complete: false,\n    });\n    setTodo(\"\");\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <div className=\"form-div\">\n        <input\n          type=\"text\"\n          name=\"todo\"\n          placeholder=\"Add a todo\"\n          value={todo}\n          onChange={onChange}\n        />\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default TodoInput;\n","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { toggleTodoAction, deleteTodoAction } from \"../redux\";\n\nconst TodoList = () => {\n  const todos = useSelector((state) => state.todos);\n  // Get dispatch\n  const dispatch = useDispatch();\n  // Set reference functions by wrapping action creators with dispatch\n  // (using this instread of useActions since that's been removed)\n  const toggleTodo = (todoId) => dispatch(toggleTodoAction(todoId));\n  const deleteTodo = (todoId) => dispatch(deleteTodoAction(todoId));\n\n  return (\n    <ul className=\"todo-list\">\n      {todos.map((todo) => (\n        <li key={todo.id}>\n          <input\n            type=\"checkbox\"\n            checked={todo.complete}\n            onChange={toggleTodo.bind(null, todo.id)}\n          />\n          <span className={todo.complete ? \"complete\" : null}>{todo.name}</span>\n          <span\n            className=\"delete-button\"\n            onClick={deleteTodo.bind(null, todo.id)}\n          >\n            X\n          </span>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./App.css\";\n\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux\";\n\nimport TodoInput from \"./components/TodoInput\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <div className=\"main\">\n          <TodoInput />\n          <TodoList />\n        </div>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}